; ホストインタフェース
; ホストパソコンとPARTNER-Jetを接続するインタフェースの種類やアドレスを設定します。
; インタフェースの種類はUSB接続かNetwork接続が選択できます。Model10/20はUSB接続のみ。
;  Ex. USB接続の場合(単体)
;	PORT ADDRESS	USB
;  Ex. USB接続の場合(複数台のPARTNER-Jetが同一のPCに接続されている場合)
;	PORT ADDRESS	USB:本体シリアルナンバー
;	  本体底面記載のシリアルナンバーを記述することで機器の選択ができます。
;  Ex. Network接続の場合
;	PORT ADDRESS	NET:xxx.xxx.xxx.xxx
;	  NET: に続けて xxx部分にIPアドレスを記述します。
;
;PORT ADDRESS	USB
;PORT ADDRESS	USB:A0100010
;PORT ADDRESS	NET:192.168.1.11
PORT ADDRESS	USB


; J_FRQ
; JTAGクロック周波数を設定します。通常はAUTOを設定してください。
; 周波数のほかに、オプションでTDO信号のサンプルタイミングの指定もできます。
;  Ex. 自動設定の場合
;	J_FRQ    AUTO
;  Ex. アダプティブモードの場合
;	RTCK信号が配線されている必要があります。JTAGクロック周波数はターゲット
;	の状態に応じて自動追従します。
;	J_FRQ   ADPT		... 通常設定
;	J_FRQ	ADPTX		... SleepなどでRTCKが停止する場合
;  Ex.マニュアル設定
;	J_FRQ	16		... 16MHz
;	J_FRQ	200K,2		... 200KHz , TDOサンプルモード2(立ち上がりエッジ)
;	J_FRQ	50,1		... 50MHz , TDOサンプルモード1(遅延)
;	J_FRQ	6.6,0		... 6.6MHz , TDOサンプルモード0(立下りエッジ)
;
;J_FRQ	AUTO
;J_FRQ	ADPT
;J_FRQ	60,1
;J_FRQ	43,1
;J_FRQ	25
;J_FRQ	16
;J_FRQ	8
;J_FRQ	1
;J_FRQ	200K
J_FRQ	AUTO


; J_VCC
; JTAG信号の電圧を指定します。1.8V/2.5V/3V/3.3V/5Vのいずれかを設定します。
; ターゲットCPUのJTAG端子のI/O電源電圧を設定してください。
;  Ex.
;	J_VCC	5
;	J_VCC	3.3
;	J_VCC	3.0
;	J_VCC	2.5
;	J_VCC	1.8
;
;J_VCC	5.0
;J_VCC	3.3
;J_VCC	3.0
;J_VCC	2.5
;J_VCC	1.8
J_VCC	2.5


; CPU名の指定
; ARM7CPUでキャッシュ&MMU内蔵しているの場合 700 を設定
; ARM7CPUでキャッシュ&MMU内蔵していない場合 70 を設定
; ARM9CPUでキャッシュ&MMU内蔵しているの場合 900 を設定
; ARM9CPUでキャッシュ&MMU内蔵していない場合 90 を設定
; ARM926の場合 926T を設定
; ARM946の場合 946T を設定
; ARM925(OMAP1510/5910)の場合 925Tを設定
; ARM1136の場合 1136を設定
; ARM1176の場合 1176を設定
; ARM1156の場合 1156を設定
; ARM11MPCoreは 11MPCを設定
; また、THUMB対応のチップの場合は、CPUタイプの後ろに 'T' を付加します。
; VFP対応のチップ(ARM1136JF-Sなど）ではCPUタイプの後ろに 'F' を付加します。
;     (例..  CPU CORE   70T)
;
;CPU CORE	900T
;CPU CORE	700T
;CPU CORE	926T
;CPU CORE	925T
;CPU CORE	70T
;CPU CORE	1136TF
;CPU CORE	1176TF
CPU CORE	1176TF


; ターゲットCPUのエンディアン
;	BIGエンディアンのときは、 bigを指定します。
;	Littleエンディアンのときは、littleを指定します。
; EX.	ENDIAN	LITTLE		... リトルの場合
;	ENDIAN	BIG		... ビッグの場合
;
;ENDIAN	LITTLE
;ENDIAN	BIG
ENDIAN	LITTLE


; CFG_ARML210
; L2キャッシュコントローラ(ARML210/220)が内蔵されてCPUでは、
; その物理アドレスを設定します。
; ARML210/220が存在しない場合は、この項目の設定は行いません。(コメントアウト)
; ex. 物理アドレス 0xe0000000番地にARML210がある場合
;	CFG_ARML210  e0000000
;
;CFG_ARML210	e0000000
;CFG_ARML210	30000000


; バーチャルリンク(VLINK)の指定です。
;	VLINK	OFF		.. バーチャルリンクを使用しません
;	VLINK	CPU		.. JTAGでバーチャルリンクを使用します
;
;VLINK	CPU
;VLINK	OFF
VLINK	OFF


; JTAG chain config
; JTAG カスケード接続情報の設定
;	J_CONFIG チップ数,チップ位置(TDO側=0),IR_lenビット数(TDO側),IR_lenビット数(TDI側)
; 単独で接続されている場合(通常)は、設定しません。
; OMAP1510/5910/16xxでは以下J_CONFIGの設定を有効にしてください
;    J_CONFIG	3,1,6,8
; ARM1136 ETB実装の場合
;    J_CONFIG	2,1,4,0
;
;J_CONFIG	3,1,6,8
;J_CONFIG	2,1,4,0


; JTAG　ブートwait時間
; デバッガ起動時および初期化時に、リセット出力後デバッグモードに
; 入るまでの待ち時間を秒単位で指定します。
; 通常は、この設定は必要ありません。
; Excaribur-ARMのFlashBootを使用する場合、 PLDのコンフィギュレーションなどの
; ブート処理が終わるまでデバッグモードに入るのを遅らせるためにこの設定が必要です。
; Excaribur-ARMを使用する場合、２から５秒程度の待ち時間を設定してください。
; EX.	J_BOOT_WAIT	2	... ２秒の待ち時間
;
;J_BOOT_WAIT	0
;J_BOOT_WAIT	2
J_BOOT_WAIT	0


; リセットディレー(J_RST_DELAY)
; JTAGコネクタからのリセット信号nSRSTをネゲートしたあとJTAGの動作を行うまでの
; 遅延をm秒単位で指定します。 この設定は通常行う必要はありません。
; この設定がない場合は遅延はありません。
; nSRST信号のネゲート後すぐにJTAG動作を行うと問題が発生するCPUやボードで
; 設定してください。
; EX. J_RST_DELAY   1000		... ｎSRST信号のネゲート後にJTAG操作の前に1000m秒のディレーを入れます。
;
;J_RST_DELAY	1000


; デバッガ起動時のCPUリセット制御(J_NO_RST_BOOT)
; デバッガ起動時にCPUリセットをするかどうかを指定します。
;  EX .. J_NO_RST_BOOT	OFF	... リセットします(ブレーク状態)
;        J_NO_RST_BOOT	ON	... リセットしません(ブレーク状態)
;	 J_NO_RST_BOOT	RUN	... リセットしません(RUN状態)
; RUN指定では、デバッガ起動後もCPUは実行状態です。
; デフォルト(未指定時)はOFFです。
;
;J_NO_RST_BOOT	OFF
;J_NO_RST_BOOT	ON
;J_NO_RST_BOOT	RUN
J_NO_RST_BOOT	OFF


; ETM機能の制御
;  ex. ETM    ON       ... ETM機能を使用します。(デフォルト)
;  ex. ETM    OFF      ... ETM機能を使用しません。
;  ex. ETM    ETB      ... ARM11でETB内蔵CPUのとき、ETBを使用します。
; ETM機能(リアルタイムとレース)を使用するかどうかを設定します。
; ETMを使用できる条件(Model20 , ARM9シリーズ , ETM内蔵CPUコア)でも
; 強制的にETMを使用しない場合に OFF を設定してください。ETM機能のための
; 端子は一般的の他の目的の端子とマルチプレックスされている場合があります。
; この場合、ETMを有効にするとETM端子とマルチプレックスされた他目的の端子
; のファンクションが使用できません。他目的の機能を使用する場合にETMをOFF
; してください。
;  第２パラメータ(ARM11のみ)
;    トレースクロック分周比   1,2,3,4
;	 ARM1136では 2 or 4　以外は設定禁止です
;	 ARM1176(ETM11CS)では 1を設定してください
;  第3パラメータ(ARM11のみ)
;    トレースポートサイズ   4(旧プローブ),8(新プローブVer2以降)
;
;ETM	ON
;ETM	ON,2,8
;ETM	ETB
;ETM	OFF
ETM	OFF


; トレース用メモリ確保の設定
; ロードさせたプログラムのメモリイメージをホストパソコン上に確保されたメ
; モリに保存するか否かを指定します。
; JTAG使用時、ETMの機能によってヒストリ（リアルタイムトレース）を実現
; します。その場合、逆アセンブル表示をする時にターゲットメモリの内容を参
; 照しますが、その参照する場所をターゲットメモリにするか、ホストパソコン
; 上に確保されたメモリにするかを選択します。
;  ex. ALLOC MEMORY	1	... ホストパソコンにコードを保存する
;  ex. ALLOC MEMORY	0	... ホストパソコンにコードを保存しない
; コードを保存しない場合にはターゲットプログラム実行中はヒストリを
; 逆アセンブル表示できませんが、ホストパソコンのメモリ使用量を減らせます。
; ETM機能が無効の場合は、この設定は意味を持ちません。
;
;ALLOC MEMORY	1
;ALLOC MEMORY	0
ALLOC MEMORY	1


; 強制ブレークの代替方法
; ESCキーなどの強制ブレークが正しくできない場合に、0を設定してください。
; 通常は1を設定します。CPUによっては、0を設定する必要があります。
; このフィールドがコメントの場合は１が設定されます。
; CPUの低電力モードなどが原因でJTAG動作が停止してハングアップする場合は
; 3を設定してください。ハングアップダイアログで、EDBGRQ信号を使ったブレーク
; 要求を出すことで、低電力モードを脱出できる場合があります。
;
;J_FBRK	1
;J_FBRK	0
;J_FBRK	3
J_FBRK	3


; ARM720/920などキャッシュON空間のデバッグをする場合のキャッシュコントロール用
; モニタ空間のアドレス(RAM空間)指定（64バイト使用)
;	JMONITOR ADDRESS	OFF		モニタ未使用(キャッシュON空間のデバッグ不可)
;	JMONITOR ADDRESS	SP		モニタをSP(r13)で示すメモリ空間指定　[ARM9では設定不可]
;	JMONITOR ADDRESS	a0000800	モニタを絶対アドレス(0xa0000800番地)指定
; ARM926/946およびARM11系のCPUでは通常OFFを設定してください。
; これらのCPUはOFF設定でキャッシュON空間のデバッグが可能です。
;
;JMONITOR ADDRESS	OFF
;JMONITOR ADDRESS	SP
;JMONITOR ADDRESS	0x60000100
JMONITOR ADDRESS	OFF


; モニタ(SVC/UND/FIQ)の使用するスタックの初期値
; モニタのワークとしてスタックを使用するようにモニタのソースで設定した場合
; このフィールドでデバッガ起動時の初期スタックを設定できます。
;
;MONITOR INIT. STACK	c1000000
;MONITOR INIT. STACK	00500000
MONITOR INIT. STACK	c1000000


;  FLASH書き込み用ワークRAMエリアの設定(FLASH WORK)
;  書式 FLASH_WORK  アドレス[,サイズ][,/mode]
;  サイズは省略可能(省略時:4K)です
;  modeには、動作モードを設定します
;     ON   .. 起動時ワークRAMを使用
;     OFF  .. 起動時ワークRAMを使用しない
;     AUTO .. 起動時ワークRAMを使用/１回実行するとワーク未使用に変更
;  modeは、zf workコマンドで起動後に変更できます
;  この設定がコメントの場合は、ワークRAMは使用しません
;  初期段階ではコメントでの使用を推奨します(正常なFlash書き込みを確認後に必要なら設定してください）
;
;FLASH_WORK	60001000


; Flash memory の設定
; FLASH MEMORY	開始アドレス,終了アドレス,<boot_sect>,CPUバス幅[,FLASHバス幅][,オプション情報]
;	boot_sectは、ブートセクタのタイプを設定します。
;	   [AMD/富士通タイプ]
;		NO 	... ブートセクタなし
;		TOP	... トップブートタイプ(32K,8K,8K,16K構成)
;		BOTTOM	... ボトムブートタイプ(16K,8K,8K,32K構成)
;		TOP8	... トップブートタイプ(8K x 8構成 MBP29DL32xなど)
;		BOTTOM8	... ボトムブートタイプ(8K x 8構成 MBP29DL32xなど)
;		BOTH8	... 両ブートタイプ(8K x 8 MB29DL640Eなど)
;		BOTH32  ... 両ブート(32Kx4)
;	   [Intel/シャープタイプ]
;		NOIS 		... ブートブロックなし(64Kブロック)
;		NOIS128		... ブートブロックなし(128Kブロック 28FxxxJ3/K3など)
;		TOP8IS		... トップブートタイプ(64KxN + 8Kx8構成 28FxxxC3など)
;		BOTTOM8IS	... ボトムブートタイプ(8Kx8 + 64KxN構成 28FxxxC3など)
;		TOP32IS128	... トップブートタイプ(128KxN + 32Kx4構成 28FxxxL30/18など)
;		BOTTOM32IS128	... ボトムブートタイプ(32Kx4 + 128KxN構成 28FxxxL30/18など)
;	CPUバス幅は、CPUのバスサイズを8/16/32で設定
;	FLASHバス幅は、メモリデバイスのバスサイズを8/16で設定
;       ただし、AMD/富士通タイプで16/8bit兼用タイプを8bitで使う場合は9を設定
;       オプション情報は、デバイスの付加情報を設定します。
;    	    /C   : AMD/富士通タイプで連続書き込みサポートのデバイス(MB29DL32x/640など)で指定
;           /B   : バッファライトをサポートしている場合に指定で高速化(バッファサイズ16)
;           /B32 : バッファライトをサポートしている場合に指定で高速化(バッファサイズ32)
;           /S128: ブートブロック以外のノーマルセクタのサイズが128KBの時に設定
;	    /M7ff: コマンド長(A0-A10)
;
;FLASH MEMORY	00000000,000fffff,BOTTOM,16
;FLASH MEMORY	04000000,040fffff,BOTTOM,16
;FLASH MEMORY	00000000,000fffff,BOTTOM,16
;FLASH MEMORY	04000000,047fffff,BOTH8,16,16,/C
;FLASH MEMORY	00000000,003fffff,BOTTOM8,16,16,/C
FLASH MEMORY	00000000,01ffffff,BOTTOM32IS128,16,16,/C


; ＰＡＲＴＮＥＲのコマンドでアクセス可能なメモリ領域（最大２０領域）
; MAP	開始ｱﾄﾞﾚｽ，終了ｱﾄﾞﾚｽ
; PARTNERのコマンドでアクセス可能な範囲を開始アドレスと終了アドレスで指定します。
;	EX.	MAP	10000000,1000FFFF
;		MAP	FFF00000,FFFFFFFF
;
MAP	00000000,ffffffff


; エミュレーションメモリのバスサイズ指定	  [オプションエミュレーションメモリ使用時]
; エミュレーションメモリのバスサイズを指定してください。
; 　32bitの場合はこのフィールドに 32を指定します。
; 　16bitの場合はこのフィールドに 16を指定します。
; 　8bitの場合はこのフィールドに 8を指定します。
;
;BUS SIZE	8
;BUS SIZE	16
;BUS SIZE	32
BUS SIZE	16


; エミュレーションメモリのタイプ	 [オプションエミュレーションメモリ使用時]
; EMEM<ユニット番号> TYPE 	<容量>,[WR]
; メモリの容量および書き込み属性を指定します。ユニット番号は、ＩＤスイッチで設定した
; 番号で0から7を指定します。
; 容量は、エミュレーションするメモリのバイト数をKBまたはMBで設定します。
; WRを指定するとユーザプログラムでの書き込みを許可します。
; 詳細はハードウェアマニュアルを参照ください。
;	Ex.	EMEM0 TYPE	1M
;	Ex	EMEM2 TYPE	256K,WR
; エミュレーションメモリのアドレス	 [オプションエミュレーションメモリ使用時]
; メモリの開始アドレス，終了アドレスとオフセットアドレスを指定します
; 終了アドレスおよびオフセットアドレスは省略可能です。
; 終了アドレスおよびオフセットアドレスの詳細はハードウェアマニュアルを参照
; 未使用はこの項目はコメントにしてください。
;	EX.	EMEM0 ADDRESS	00000000
;		EMEM2 ADDRESS	00400000
;
;EMEM0 TYPE	16M
;EMEM0 ADDRESS	00000000
;EMEM2 TYPE	256K,WR
;EMEM2 ADDRESS	00400000


; ターゲットの初期化を行います。
; 特にバスコントロールユニット(BCU)やDRAMコントローラの初期を行われていないと
; デバッガ起動直後に、正しくメモリにアクセスできません。
; INITフィールドでは、起動時のIOやCPU内部レジスタの初期値を指定できます。
; INITフィールドは以下の書式で最大511個まで記述できます。
; 書式
;  INIT {CMD},{Adr},{Data}
;	CMD : アクセスするデータサイズを指定します。
;		POB,EB =8bit メモリライト
;		POW,EW =16bit メモリライト
;		POD,ED =32bit メモリライト
;		COP = コプロセッサへライト(ARM926/ARM1136のみ)
;	Adr : メモリのアドレスを指定します。
;	Data: 書きこむデータを指定します。ビット単位でマスク指定可能
;	Mask: マスク値を指定します。Mask値で1が指定されたbitのみ更新されます。
;	      Mask値は省略可能です。省略した場合はすべてのbitが更新されます。
;	      すべてのbitがマスクされた場合、指定されたアドレスの読み出し動作
;	      のみ行われます。
;       CMDにCOPを指定するとコプロセッサレジスタへのライトができます。
;       この場合、{Adr}には、MCR命令のオペランドに相当するパラメータリストを記述します。
;       たとえば MCR P15,0,R0,C15,C2,4   (R0=0x80000003) の動作を行う場合の記述例
;           INIT COP,P15,0,C15,C2,4,80000003
;
;*---- KZ-ARM7PCIの例 ---
;INIT	pod,0x80002200,6	;SYSCON3: --- CPU 73.728MHz , SDRAM 36.864MHz
;INIT	pod,0x80002300,0x522	;SDCONF : --- SDRAM 64Mbit/16bit/C_lat=2
;INIT	pod,0x80002340,_576	;SDRFPR : --- Refresh interval 16usec at (36MHz)
;INIT	pod,0x80000180,0x998c8c98	;MEMCFG1: --- CS3=32bit,CS2=CS1=CS0=16bit  3/3/2wait
;INIT	pod,0x80000280,@xxxxxxxx_xxxxxxxx_xxxxxxxx_xxxxxxx1
INIT	pod,0xC0140108,0x00000000


;兼用端子切り替え
INIT POD 0xC0140200,0x55400000 ;CHG_PINSEL_G00
INIT POD 0xC0140204,0x55555555 ;CHG_PINSEL_G16
INIT POD 0xC0140208,0x54555055 ;CHG_PINSEL_G32
INIT POD 0xC014020C,0x55555555 ;CHG_PINSEL_G48
INIT POD 0xC0140210,0xffc05555 ;CHG_PINSEL_G64
INIT POD 0xC0140214,0x06556940 ;CHG_PINSEL_G80
INIT POD 0xC0140218,0x55555555 ;CHG_PINSEL_G96
INIT POD 0xC014021C,0x00000555 ;CHG_PINSEL_G112
INIT POD 0xC0140108,0x00000001 ;CHG_CTRL_AB0_BOOT

;INIT POD 0xC0140300,0x55050000 ;CHG_PULL_G00  DSW2
;INIT POD 0xC0140304,0x00000005 ;CHG_PULL_G08  DSW2

;INIT POD 0xC0050080,0xC0000000 ;GIO_E1\/HH  LED2,3

INIT POD 0x0C01100F0,0x00244300 ;NOMALA_DIV
;最高周波数設定
;PLL1=500MHZ
;ACPU 1分周設定　500MHZ
;ADSP 1分周設定　500MHZ
;HBUS 3分周設定　166.6MHZ
;LBUS 6分周設定　83.3MHZ
;FLASH 6分周設定　83.3MHZ
;MEMC 3分周設定　166.6MHZ
INIT POD 0xC01103C0,0x00010200 ;AB1_U70WAITCTRL
INIT POD 0xC01103C4,0x00010200 ;AB1_U71WAITCTRL
INIT POD 0xC01103C8,0x00010200 ;AB1_U72WAITCTRL
INIT POD 0xC01103CC,0x00010300 ;AB1_IIC2WAITCTRL
INIT POD 0xC01103D0,0x00010300 ;AB1_IICWAITCTRL
INIT POD 0xC01103E8,0x00010200 ;AB1_SDIBWAITCTRL
INIT POD 0xC01103F0,0x00010200 ;AB1_SDICWAITCTRL
;以下デフォルト
INIT POD 0xC01103D4,0x00000000 ;AB1_U70READCTRL
INIT POD 0xC01103D8,0x00000000 ;AB1_U71READCTRL
INIT POD 0xC01103DC,0x00000000 ;AB1_U72READCTRL
INIT POD 0xC01103E0,0x00000000 ;AB1_IIC2READCTRL
INIT POD 0xC01103E4,0x00000000 ;AB1_IICREADCTRL
INIT POD 0xC01103EC,0x00000000 ;AB1_SDIBREADCTRL
INIT POD 0xC01103F4,0x00000000 ;AB1_SDICREADCTRL

;メモリマップBANK0-2割り当て
;BANK0 0000_0000H-0FFF_FFFFH FOR NOR-FLASH CS0
INIT POD 0x2FFF0100,0x00000000 ;AB0_0BASEADD
INIT POD 0x2FFF0104,0xF0000000 ;AB0_0BITCOMP

;BANK1 1000_0000H-2FFF_FFFFH FOR BLANK CS1
INIT POD 0x2FFF0110,0x10000000 ;AB0_1BASEADD
INIT POD 0x2FFF0114,0x10000000 ;AB0_1BITCOMP

;BANK2 2000_0000H-27FF_FFFFH FOR CS2 & CS3(LAN9221)
INIT POD 0x2FFF0120,0x20000000 ;AB0_2BASEADD
INIT POD 0x2FFF0124,0xF8000000 ;AB0_2BITCOMP
;BANK2 2800_0000H-2FFF_FFFFH CS3(LAN9221)
INIT POD 0x2FFF0130,0x28000000 ;AB0_3BASEADD
INIT POD 0x2FFF0134,0xF8000000 ;AB0_3BITCOMP

;URT0_SETTING
INIT POD 0xC0110158,0x00000000 ;DIVU70SCLK 分周1設定
INIT POW 0x50000010,0x0080 ;LCR 分周ラッチアクセスビット設定
INIT POW 0x50000024,0x0005 ;DLM 分周ラッチMSバイト　分周5設定
INIT POW 0x50000028,0x00D5 ;DLL 分周ラッチLSバイト 分周213設定
INIT POW 0x50000010,0x0000 ;LCR 分周ラッチ固定 クロック生成開始
INIT POW 0x5000000C,0x0001 ;FCR NO-FIFO MODE設定
INIT POW 0x50000010,0x0003 ;LCR キャラクタ長8ビット,ストップビット1,パリティなし
INIT POW 0x50000014,0x0002 ;MCR オートフロー制御無効、RTSZ出力アクティブ
;URT0 初期化完了

;URT1_SETTING
INIT POD 0xC011015C,0x00000000 ;DIVU71SCLK 分周1設定
INIT POW 0x50010010,0x0080 ;LCR 分周ラッチアクセスビット設定
INIT POW 0x50010024,0x0005 ;DLM 分周ラッチMSバイト　分周5設定
INIT POW 0x50010028,0x00D5 ;DLL 分周ラッチLSバイト 分周213設定
INIT POW 0x50010010,0x0000 ;LCR 分周ラッチ固定 クロック生成開始
INIT POW 0x5001000C,0x0001 ;FCR NO-FIFO MODE設定
INIT POW 0x50010010,0x0003 ;LCR キャラクタ長8ビット,ストップビット1,パリティなし
INIT POW 0x50010014,0x0002 ;MCR オートフロー制御無効、RTSZ出力アクティブ
;URT1 初期化完了

;URT通信条件
;ボーレート9600BPS
;パリティ　なし
;ストップビット　1
;フロー制御なし
;NON FIFO MODE
INIT POD 0XC00A2000,00000015 ;MEMC_DDR_CONFIGF1
INIT POD 0XC00A200C,40200003 ;MEMC_DDR_CONFIGC1
INIT POD 0XC00A2020,000D0803 ;MEMC_DDR_CONFIGT1
INIT POD 0XC00A2004,53443203 ;MEMC_DDR_CONFIGA1
INIT POD 0XC00A2008,20DA1042 ;MEMC_DDR_CONFIGA2

INIT POD 0x2fff0080, 0x00000001 ; AB0_FLASHCLKCTRL
